import Objeto3D from "../components/Objeto3D.jsx";
import BackgroundGalaxy from "../components/BackgroundGalaxy.jsx";
import * as THREE from 'three';

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Canvas } from "@react-three/fiber";
import { Environment, OrbitControls, Lightformer, ContactShadows } from "@react-three/drei";
import { Suspense } from "react";

import { useEffect, useState } from 'react';
export default function Home() {


  const [opciones, setopciones] = useState(0);
  const [isLoading, setIsLoading] = useState(false)

  function handleClickOpciones(newOption) {
    if (newOption != opciones) {
      setIsLoading(!isLoading);
      setTimeout(() => {
        setopciones(newOption);
      }, 2000);
    }
  }

  useEffect(() => {
    setIsLoading(!isLoading);
  }, [opciones])

  return (
    <>
      <div style={{ backgroundColor: "gray" }}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>




        <main className={styles.main}>


          <div style={{ width: "100%", height: "100vh" }}>
            <Canvas style={{ width: "100%" }}>
              <Suspense fallback={null}>
              <color attach="background" args={['#15151a']} />
                <Objeto3D animation={"idle"} />
                <BackgroundGalaxy />
                
                <hemisphereLight intensity={0.3} color={"#0000FF"}/>



                <ContactShadows resolution={1024} frames={1} position={[0, -1.16, 0]} scale={15} blur={0.5} opacity={1} far={20} />
                <mesh scale={4} position={[3, -1.161,-1.5]} rotation={[-Math.PI / 2, 0, Math.PI / 2.5]}>
                  <ringGeometry args={[0.9, 1, 4, 1]} />
                  <meshStandardMaterial color="white" roughness={0.75} />
                </mesh>
                <mesh scale={4} position={[-3, -1.161, -1]} rotation={[-Math.PI / 2, 0, Math.PI / 2.5]}>
                  <ringGeometry args={[0.9, 1, 3, 1]} />
                  <meshStandardMaterial color="blue" roughness={0.75} />
                </mesh>

                <Environment resolution={512}>
                  {/* Ceiling */}
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, -9]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, -6]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, -3]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, 0]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, 3]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, 6]} scale={[10, 1, 1]} />
                  <Lightformer intensity={2} rotation-x={Math.PI / 2} position={[0, 4, 9]} scale={[10, 1, 1]} />
                  {/* Sides */}
                  <Lightformer intensity={2} rotation-y={Math.PI / 2} position={[-50, 2, 0]} scale={[100, 2, 1]} />
                  <Lightformer intensity={2} rotation-y={-Math.PI / 2} position={[50, 2, 0]} scale={[100, 2, 1]} />
                  {/* Key */}
                  <Lightformer form="ring" color="red" intensity={10} scale={2} position={[10, 5, 10]} onUpdate={(self) => self.lookAt(0, 0, 0)} />
                </Environment>
              </Suspense>
            </Canvas>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer>
      </div>
    </>
  )
}
